Grammar

    0 $accept: module $end

    1 module: "def" patt
    2       | declarators patt '=' sort module
    3       | "def" patt module

    4 set: ε
    5    | declarators patt '=' sort set

    6 declarators: "let"
    7            | "rec"
    8            | "tot"

    9 number: NUM
   10       | NUM '.' NUM

   11 literal: number
   12        | "type"
   13        | "kind"
   14        | "set"
   15        | "module"
   16        | "sort"

   17 sort: ident
   18     | '{' set '}'
   19     | '{' module '}'
   20     | literal
   21     | '(' sort ')'
   22     | sort implicit
   23     | sort sort '^'
   24     | '(' fnBranch ')'
   25     | sort sort '%'
   26     | sort sort '/'
   27     | sort sort '!'
   28     | sort '@' '(' patt ')' sort '%'
   29     | sort '@' '(' patt ')' " , " sort '%'
   30     | sort '@' '(' patt ')' sort '^'
   31     | sort '@' '(' patt ')' " . " sort '^'
   32     | sort "::" '(' patt ')'
   33     | sort "::" '{' set '}'
   34     | "set::" '{' multipatt '}'
   35     | sort '@' ident

   36 fnBranch: '>' patt guard ';' sort
   37         | ">>" patt guard ';' sort fnBranch
   38         | '>' patt guard ';' sort fnBranch

   39 guard: ε
   40      | '&' patt '=' sort guard
   41      | '|' patt guard

   42 ident: WORD

   43 patt: '_'
   44     | ident
   45     | '(' patt ')'
   46     | literal
   47     | '~' ident
   48     | '~' '(' sort ')'
   49     | patt implicit_dec
   50     | '(' patt ':' sort ')'
   51     | patt "::" patt
   52     | '{' set '}'
   53     | patt ' ' patt '!'
   54     | patt ' ' patt '/'

   55 multisort: ε
   56          | sort ' ' multisort

   57 implicit: '[' multisort ']'

   58 multipatt: ε
   59          | patt ' ' multipatt

   60 implicit_dec: '[' multipatt ']'


Terminals, with rules where they appear

    $end (0) 0
    ' ' (32) 53 54 56 59
    '!' (33) 27 53
    '%' (37) 25 28 29
    '&' (38) 40
    '(' (40) 21 24 28 29 30 31 32 45 48 50
    ')' (41) 21 24 28 29 30 31 32 45 48 50
    '.' (46) 10
    '/' (47) 26 54
    ':' (58) 50
    ';' (59) 36 37 38
    '=' (61) 2 5 40
    '>' (62) 36 38
    '@' (64) 28 29 30 31 35
    '[' (91) 57 60
    ']' (93) 57 60
    '^' (94) 23 30 31
    '_' (95) 43
    '{' (123) 18 19 33 34 52
    '|' (124) 41
    '}' (125) 18 19 33 34 52
    '~' (126) 47 48
    error (256)
    NUM (258) 9 10
    WORD (259) 42
    "::" (260) 32 33 51
    "def" (261) 1 3
    "let" (262) 6
    "rec" (263) 7
    "tot" (264) 8
    "type" (265) 12
    "kind" (266) 13
    "set" (267) 14
    "module" (268) 15
    "sort" (269) 16
    " , " (270) 29
    " . " (271) 31
    "set::" (272) 34
    ">>" (273) 37


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    module (41)
        on left: 1 2 3
        on right: 0 2 3 19
    set (42)
        on left: 4 5
        on right: 5 18 33 52
    declarators (43)
        on left: 6 7 8
        on right: 2 5
    number (44)
        on left: 9 10
        on right: 11
    literal (45)
        on left: 11 12 13 14 15 16
        on right: 20 46
    sort (46)
        on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 2 5 21 22 23 25 26 27 28 29 30 31 32 33 35 36 37 38 40 48 50 56
    fnBranch (47)
        on left: 36 37 38
        on right: 24 37 38
    guard (48)
        on left: 39 40 41
        on right: 36 37 38 40 41
    ident (49)
        on left: 42
        on right: 17 35 44 47
    patt (50)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 1 2 3 5 28 29 30 31 32 36 37 38 40 41 45 49 50 51 53 54 59
    multisort (51)
        on left: 55 56
        on right: 56 57
    implicit (52)
        on left: 57
        on right: 22
    multipatt (53)
        on left: 58 59
        on right: 34 59 60
    implicit_dec (54)
        on left: 60
        on right: 49


State 0

    0 $accept: • module $end

    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    module       go to state 5
    declarators  go to state 6


State 1

    1 module: "def" • patt
    3       | "def" • patt module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 21


State 2

    6 declarators: "let" •

    $default  reduce using rule 6 (declarators)


State 3

    7 declarators: "rec" •

    $default  reduce using rule 7 (declarators)


State 4

    8 declarators: "tot" •

    $default  reduce using rule 8 (declarators)


State 5

    0 $accept: module • $end

    $end  shift, and go to state 22


State 6

    2 module: declarators • patt '=' sort module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 23


State 7

    9 number: NUM •
   10       | NUM • '.' NUM

    '.'  shift, and go to state 24

    $default  reduce using rule 9 (number)


State 8

   42 ident: WORD •

    $default  reduce using rule 42 (ident)


State 9

   43 patt: '_' •

    $default  reduce using rule 43 (patt)


State 10

   12 literal: "type" •

    $default  reduce using rule 12 (literal)


State 11

   13 literal: "kind" •

    $default  reduce using rule 13 (literal)


State 12

   14 literal: "set" •

    $default  reduce using rule 14 (literal)


State 13

   15 literal: "module" •

    $default  reduce using rule 15 (literal)


State 14

   16 literal: "sort" •

    $default  reduce using rule 16 (literal)


State 15

   52 patt: '{' • set '}'

    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    set          go to state 25
    declarators  go to state 26


State 16

   45 patt: '(' • patt ')'
   50     | '(' • patt ':' sort ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 27


State 17

   47 patt: '~' • ident
   48     | '~' • '(' sort ')'

    WORD  shift, and go to state 8
    '('   shift, and go to state 28

    ident  go to state 29


State 18

   11 literal: number •

    $default  reduce using rule 11 (literal)


State 19

   46 patt: literal •

    $default  reduce using rule 46 (patt)


State 20

   44 patt: ident •

    $default  reduce using rule 44 (patt)


State 21

    1 module: "def" patt •
    3       | "def" patt • module
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '    shift, and go to state 30
    "::"   shift, and go to state 31
    '['    shift, and go to state 32
    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 1 (module)

    module        go to state 33
    declarators   go to state 6
    implicit_dec  go to state 34


State 22

    0 $accept: module $end •

    $default  accept


State 23

    2 module: declarators patt • '=' sort module
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 35

    implicit_dec  go to state 34


State 24

   10 number: NUM '.' • NUM

    NUM  shift, and go to state 36


State 25

   52 patt: '{' set • '}'

    '}'  shift, and go to state 37


State 26

    5 set: declarators • patt '=' sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 38


State 27

   45 patt: '(' patt • ')'
   49     | patt • implicit_dec
   50     | '(' patt • ':' sort ')'
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    ':'   shift, and go to state 39
    '['   shift, and go to state 32
    ')'   shift, and go to state 40

    implicit_dec  go to state 34


State 28

   48 patt: '~' '(' • sort ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 45
    ident    go to state 46


State 29

   47 patt: '~' ident •

    $default  reduce using rule 47 (patt)


State 30

   53 patt: patt ' ' • patt '!'
   54     | patt ' ' • patt '/'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 47


State 31

   51 patt: patt "::" • patt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 48


State 32

   60 implicit_dec: '[' • multipatt ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    $default  reduce using rule 58 (multipatt)

    number     go to state 18
    literal    go to state 19
    ident      go to state 20
    patt       go to state 49
    multipatt  go to state 50


State 33

    3 module: "def" patt module •

    $default  reduce using rule 3 (module)


State 34

   49 patt: patt implicit_dec •

    $default  reduce using rule 49 (patt)


State 35

    2 module: declarators patt '=' • sort module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 51
    ident    go to state 46


State 36

   10 number: NUM '.' NUM •

    $default  reduce using rule 10 (number)


State 37

   52 patt: '{' set '}' •

    $default  reduce using rule 52 (patt)


State 38

    5 set: declarators patt • '=' sort set
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 52

    implicit_dec  go to state 34


State 39

   50 patt: '(' patt ':' • sort ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 53
    ident    go to state 46


State 40

   45 patt: '(' patt ')' •

    $default  reduce using rule 45 (patt)


State 41

   18 sort: '{' • set '}'
   19     | '{' • module '}'

    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    module       go to state 54
    set          go to state 55
    declarators  go to state 56


State 42

   21 sort: '(' • sort ')'
   24     | '(' • fnBranch ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43
    '>'       shift, and go to state 57
    ">>"      shift, and go to state 58

    number    go to state 18
    literal   go to state 44
    sort      go to state 59
    fnBranch  go to state 60
    ident     go to state 46


State 43

   34 sort: "set::" • '{' multipatt '}'

    '{'  shift, and go to state 61


State 44

   20 sort: literal •

    $default  reduce using rule 20 (sort)


State 45

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   48 patt: '~' '(' sort • ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    ')'       shift, and go to state 65
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 46

   17 sort: ident •

    $default  reduce using rule 17 (sort)


State 47

   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   53     | patt ' ' patt • '!'
   54     | patt • ' ' patt '/'
   54     | patt ' ' patt • '/'

    ' '   shift, and go to state 30
    '/'   shift, and go to state 68
    '!'   shift, and go to state 69
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    implicit_dec  go to state 34


State 48

   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   51     | patt "::" patt •
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 51 (patt)

    implicit_dec  go to state 34


State 49

   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'
   59 multipatt: patt • ' ' multipatt

    ' '   shift, and go to state 70
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    implicit_dec  go to state 34


State 50

   60 implicit_dec: '[' multipatt • ']'

    ']'  shift, and go to state 71


State 51

    2 module: declarators patt '=' sort • module
   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "def"     shift, and go to state 1
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    module       go to state 72
    declarators  go to state 6
    number       go to state 18
    literal      go to state 44
    sort         go to state 66
    ident        go to state 46
    implicit     go to state 67


State 52

    5 set: declarators patt '=' • sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 73
    ident    go to state 46


State 53

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   50 patt: '(' patt ':' sort • ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    ')'       shift, and go to state 74
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 54

   19 sort: '{' module • '}'

    '}'  shift, and go to state 75


State 55

   18 sort: '{' set • '}'

    '}'  shift, and go to state 76


State 56

    2 module: declarators • patt '=' sort module
    5 set: declarators • patt '=' sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 77


State 57

   36 fnBranch: '>' • patt guard ';' sort
   38         | '>' • patt guard ';' sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 78


State 58

   37 fnBranch: ">>" • patt guard ';' sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 79


State 59

   21 sort: '(' sort • ')'
   22     | sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    ')'       shift, and go to state 80
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 60

   24 sort: '(' fnBranch • ')'

    ')'  shift, and go to state 81


State 61

   34 sort: "set::" '{' • multipatt '}'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    $default  reduce using rule 58 (multipatt)

    number     go to state 18
    literal    go to state 19
    ident      go to state 20
    patt       go to state 49
    multipatt  go to state 82


State 62

   28 sort: sort '@' • '(' patt ')' sort '%'
   29     | sort '@' • '(' patt ')' " , " sort '%'
   30     | sort '@' • '(' patt ')' sort '^'
   31     | sort '@' • '(' patt ')' " . " sort '^'
   35     | sort '@' • ident

    WORD  shift, and go to state 8
    '('   shift, and go to state 83

    ident  go to state 84


State 63

   32 sort: sort "::" • '(' patt ')'
   33     | sort "::" • '{' set '}'

    '{'  shift, and go to state 85
    '('  shift, and go to state 86


State 64

   57 implicit: '[' • multisort ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    $default  reduce using rule 55 (multisort)

    number     go to state 18
    literal    go to state 44
    sort       go to state 87
    ident      go to state 46
    multisort  go to state 88


State 65

   48 patt: '~' '(' sort ')' •

    $default  reduce using rule 48 (patt)


State 66

   22 sort: sort • implicit
   23     | sort • sort '^'
   23     | sort sort • '^'
   25     | sort • sort '%'
   25     | sort sort • '%'
   26     | sort • sort '/'
   26     | sort sort • '/'
   27     | sort • sort '!'
   27     | sort sort • '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '/'       shift, and go to state 89
    '%'       shift, and go to state 90
    '!'       shift, and go to state 91
    '^'       shift, and go to state 92
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 67

   22 sort: sort implicit •

    $default  reduce using rule 22 (sort)


State 68

   54 patt: patt ' ' patt '/' •

    $default  reduce using rule 54 (patt)


State 69

   53 patt: patt ' ' patt '!' •

    $default  reduce using rule 53 (patt)


State 70

   53 patt: patt ' ' • patt '!'
   54     | patt ' ' • patt '/'
   59 multipatt: patt ' ' • multipatt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    $default  reduce using rule 58 (multipatt)

    number     go to state 18
    literal    go to state 19
    ident      go to state 20
    patt       go to state 93
    multipatt  go to state 94


State 71

   60 implicit_dec: '[' multipatt ']' •

    $default  reduce using rule 60 (implicit_dec)


State 72

    2 module: declarators patt '=' sort module •

    $default  reduce using rule 2 (module)


State 73

    5 set: declarators patt '=' sort • set
   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    $default  reduce using rule 4 (set)

    set          go to state 95
    declarators  go to state 26
    number       go to state 18
    literal      go to state 44
    sort         go to state 66
    ident        go to state 46
    implicit     go to state 67


State 74

   50 patt: '(' patt ':' sort ')' •

    $default  reduce using rule 50 (patt)


State 75

   19 sort: '{' module '}' •

    $default  reduce using rule 19 (sort)


State 76

   18 sort: '{' set '}' •

    $default  reduce using rule 18 (sort)


State 77

    2 module: declarators patt • '=' sort module
    5 set: declarators patt • '=' sort set
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 96

    implicit_dec  go to state 34


State 78

   36 fnBranch: '>' patt • guard ';' sort
   38         | '>' patt • guard ';' sort fnBranch
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    '|'   shift, and go to state 97
    '&'   shift, and go to state 98
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 39 (guard)

    guard         go to state 99
    implicit_dec  go to state 34


State 79

   37 fnBranch: ">>" patt • guard ';' sort fnBranch
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    '|'   shift, and go to state 97
    '&'   shift, and go to state 98
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 39 (guard)

    guard         go to state 100
    implicit_dec  go to state 34


State 80

   21 sort: '(' sort ')' •

    $default  reduce using rule 21 (sort)


State 81

   24 sort: '(' fnBranch ')' •

    $default  reduce using rule 24 (sort)


State 82

   34 sort: "set::" '{' multipatt • '}'

    '}'  shift, and go to state 101


State 83

   28 sort: sort '@' '(' • patt ')' sort '%'
   29     | sort '@' '(' • patt ')' " , " sort '%'
   30     | sort '@' '(' • patt ')' sort '^'
   31     | sort '@' '(' • patt ')' " . " sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 102


State 84

   35 sort: sort '@' ident •

    $default  reduce using rule 35 (sort)


State 85

   33 sort: sort "::" '{' • set '}'

    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    set          go to state 103
    declarators  go to state 26


State 86

   32 sort: sort "::" '(' • patt ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 104


State 87

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   56 multisort: sort • ' ' multisort

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    ' '       shift, and go to state 105
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 88

   57 implicit: '[' multisort • ']'

    ']'  shift, and go to state 106


State 89

   26 sort: sort sort '/' •

    $default  reduce using rule 26 (sort)


State 90

   25 sort: sort sort '%' •

    $default  reduce using rule 25 (sort)


State 91

   27 sort: sort sort '!' •

    $default  reduce using rule 27 (sort)


State 92

   23 sort: sort sort '^' •

    $default  reduce using rule 23 (sort)


State 93

   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   53     | patt ' ' patt • '!'
   54     | patt • ' ' patt '/'
   54     | patt ' ' patt • '/'
   59 multipatt: patt • ' ' multipatt

    ' '   shift, and go to state 70
    '/'   shift, and go to state 68
    '!'   shift, and go to state 69
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    implicit_dec  go to state 34


State 94

   59 multipatt: patt ' ' multipatt •

    $default  reduce using rule 59 (multipatt)


State 95

    5 set: declarators patt '=' sort set •

    $default  reduce using rule 5 (set)


State 96

    2 module: declarators patt '=' • sort module
    5 set: declarators patt '=' • sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 107
    ident    go to state 46


State 97

   41 guard: '|' • patt guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 108


State 98

   40 guard: '&' • patt '=' sort guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 15
    '('       shift, and go to state 16
    '~'       shift, and go to state 17

    number   go to state 18
    literal  go to state 19
    ident    go to state 20
    patt     go to state 109


State 99

   36 fnBranch: '>' patt guard • ';' sort
   38         | '>' patt guard • ';' sort fnBranch

    ';'  shift, and go to state 110


State 100

   37 fnBranch: ">>" patt guard • ';' sort fnBranch

    ';'  shift, and go to state 111


State 101

   34 sort: "set::" '{' multipatt '}' •

    $default  reduce using rule 34 (sort)


State 102

   28 sort: sort '@' '(' patt • ')' sort '%'
   29     | sort '@' '(' patt • ')' " , " sort '%'
   30     | sort '@' '(' patt • ')' sort '^'
   31     | sort '@' '(' patt • ')' " . " sort '^'
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    ')'   shift, and go to state 112

    implicit_dec  go to state 34


State 103

   33 sort: sort "::" '{' set • '}'

    '}'  shift, and go to state 113


State 104

   32 sort: sort "::" '(' patt • ')'
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    ')'   shift, and go to state 114

    implicit_dec  go to state 34


State 105

   56 multisort: sort ' ' • multisort

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    $default  reduce using rule 55 (multisort)

    number     go to state 18
    literal    go to state 44
    sort       go to state 87
    ident      go to state 46
    multisort  go to state 115


State 106

   57 implicit: '[' multisort ']' •

    $default  reduce using rule 57 (implicit)


State 107

    2 module: declarators patt '=' sort • module
    5 set: declarators patt '=' sort • set
   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "def"     shift, and go to state 1
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    $default  reduce using rule 4 (set)

    module       go to state 72
    set          go to state 95
    declarators  go to state 56
    number       go to state 18
    literal      go to state 44
    sort         go to state 66
    ident        go to state 46
    implicit     go to state 67


State 108

   41 guard: '|' patt • guard
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    '|'   shift, and go to state 97
    '&'   shift, and go to state 98
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 39 (guard)

    guard         go to state 116
    implicit_dec  go to state 34


State 109

   40 guard: '&' patt • '=' sort guard
   49 patt: patt • implicit_dec
   51     | patt • "::" patt
   53     | patt • ' ' patt '!'
   54     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 117

    implicit_dec  go to state 34


State 110

   36 fnBranch: '>' patt guard ';' • sort
   38         | '>' patt guard ';' • sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 118
    ident    go to state 46


State 111

   37 fnBranch: ">>" patt guard ';' • sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 119
    ident    go to state 46


State 112

   28 sort: sort '@' '(' patt ')' • sort '%'
   29     | sort '@' '(' patt ')' • " , " sort '%'
   30     | sort '@' '(' patt ')' • sort '^'
   31     | sort '@' '(' patt ')' • " . " sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    " , "     shift, and go to state 120
    " . "     shift, and go to state 121
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 122
    ident    go to state 46


State 113

   33 sort: sort "::" '{' set '}' •

    $default  reduce using rule 33 (sort)


State 114

   32 sort: sort "::" '(' patt ')' •

    $default  reduce using rule 32 (sort)


State 115

   56 multisort: sort ' ' multisort •

    $default  reduce using rule 56 (multisort)


State 116

   41 guard: '|' patt guard •

    $default  reduce using rule 41 (guard)


State 117

   40 guard: '&' patt '=' • sort guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 123
    ident    go to state 46


State 118

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   36 fnBranch: '>' patt guard ';' sort •
   38         | '>' patt guard ';' sort • fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43
    '>'       shift, and go to state 57
    ">>"      shift, and go to state 58

    $default  reduce using rule 36 (fnBranch)

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    fnBranch  go to state 124
    ident     go to state 46
    implicit  go to state 67


State 119

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   37 fnBranch: ">>" patt guard ';' sort • fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43
    '>'       shift, and go to state 57
    ">>"      shift, and go to state 58

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    fnBranch  go to state 125
    ident     go to state 46
    implicit  go to state 67


State 120

   29 sort: sort '@' '(' patt ')' " , " • sort '%'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 126
    ident    go to state 46


State 121

   31 sort: sort '@' '(' patt ')' " . " • sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number   go to state 18
    literal  go to state 44
    sort     go to state 127
    ident    go to state 46


State 122

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   28     | sort '@' '(' patt ')' sort • '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   30     | sort '@' '(' patt ')' sort • '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '%'       shift, and go to state 128
    '^'       shift, and go to state 129
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 123

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident
   40 guard: '&' patt '=' sort • guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '|'       shift, and go to state 97
    '&'       shift, and go to state 98
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    $default  reduce using rule 39 (guard)

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    guard     go to state 130
    ident     go to state 46
    implicit  go to state 67


State 124

   38 fnBranch: '>' patt guard ';' sort fnBranch •

    $default  reduce using rule 38 (fnBranch)


State 125

   37 fnBranch: ">>" patt guard ';' sort fnBranch •

    $default  reduce using rule 37 (fnBranch)


State 126

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   29     | sort '@' '(' patt ')' " , " sort • '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '%'       shift, and go to state 131
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 127

   22 sort: sort • implicit
   23     | sort • sort '^'
   25     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort '!'
   28     | sort • '@' '(' patt ')' sort '%'
   29     | sort • '@' '(' patt ')' " , " sort '%'
   30     | sort • '@' '(' patt ')' sort '^'
   31     | sort • '@' '(' patt ')' " . " sort '^'
   31     | sort '@' '(' patt ')' " . " sort • '^'
   32     | sort • "::" '(' patt ')'
   33     | sort • "::" '{' set '}'
   35     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '^'       shift, and go to state 132
    '@'       shift, and go to state 62
    "::"      shift, and go to state 63
    '['       shift, and go to state 64
    "type"    shift, and go to state 10
    "kind"    shift, and go to state 11
    "set"     shift, and go to state 12
    "module"  shift, and go to state 13
    "sort"    shift, and go to state 14
    '{'       shift, and go to state 41
    '('       shift, and go to state 42
    "set::"   shift, and go to state 43

    number    go to state 18
    literal   go to state 44
    sort      go to state 66
    ident     go to state 46
    implicit  go to state 67


State 128

   28 sort: sort '@' '(' patt ')' sort '%' •

    $default  reduce using rule 28 (sort)


State 129

   30 sort: sort '@' '(' patt ')' sort '^' •

    $default  reduce using rule 30 (sort)


State 130

   40 guard: '&' patt '=' sort guard •

    $default  reduce using rule 40 (guard)


State 131

   29 sort: sort '@' '(' patt ')' " , " sort '%' •

    $default  reduce using rule 29 (sort)


State 132

   31 sort: sort '@' '(' patt ')' " . " sort '^' •

    $default  reduce using rule 31 (sort)

Grammar

    0 $accept: expr $end

    1 expr: ident
    2     | '0'
    3     | '1'
    4     | '2'
    5     | '3'
    6     | '4'
    7     | '5'
    8     | '(' '>' patt ';' expr ')'
    9     | expr '>' patt ';' expr
   10     | expr ' ' expr
   11     | expr '.' expr
   12     | '(' expr '&' expr ')'
   13     | expr '@' expr
   14     | '(' "with" expr branch ')'
   15     | '(' "recur with" expr branch ')'

   16 branch: ε
   17       | '|' '>' patt ';' expr branch
   18       | '|' '>' patt '&' '(' declaration ')' ';' expr branch
   19       | '|' expr

   20 patt: '_'
   21     | '_' type
   22     | '`' ident
   23     | '`' patt ':' type
   24     | '`' ident "::" patt
   25     | '(' patt '%' patt ')'
   26     | '(' '(' patt ')' '.' patt ')'

   27 type: '*'
   28     | '#'

   29 ident: 'a'
   30      | 'b'
   31      | 'c'
   32      | 'd'
   33      | 'e'
   34      | 'x'
   35      | 'y'

   36 declaration: ε
   37            | "recur" patt "<>" expr declaration
   38            | patt "<" expr declaration
   39            | expr ">" patt declaration


Terminals, with rules where they appear

    $end (0) 0
    ' ' (32) 10
    '#' (35) 28
    '%' (37) 25
    '&' (38) 12 18
    '(' (40) 8 12 14 15 18 25 26
    ')' (41) 8 12 14 15 18 25 26
    '*' (42) 27
    '.' (46) 11 26
    '0' (48) 2
    '1' (49) 3
    '2' (50) 4
    '3' (51) 5
    '4' (52) 6
    '5' (53) 7
    ':' (58) 23
    ';' (59) 8 9 17 18
    '>' (62) 8 9 17 18
    '@' (64) 13
    '_' (95) 20 21
    '`' (96) 22 23 24
    'a' (97) 29
    'b' (98) 30
    'c' (99) 31
    'd' (100) 32
    'e' (101) 33
    'x' (120) 34
    'y' (121) 35
    '|' (124) 17 18 19
    error (256)
    "with" (258) 14
    "recur with" (259) 15
    "::" (260) 24
    "recur" (261) 37
    "<>" (262) 37
    "<" (263) 38
    ">" (264) 39


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    expr (39)
        on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
        on right: 0 8 9 10 11 12 13 14 15 17 18 19 37 38 39
    branch (40)
        on left: 16 17 18 19
        on right: 14 15 17 18
    patt (41)
        on left: 20 21 22 23 24 25 26
        on right: 8 9 17 18 23 24 25 26 37 38 39
    type (42)
        on left: 27 28
        on right: 21 23
    ident (43)
        on left: 29 30 31 32 33 34 35
        on right: 1 22 24
    declaration (44)
        on left: 36 37 38 39
        on right: 18 37 38 39


State 0

    0 $accept: • expr $end

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 15
    ident  go to state 16


State 1

    2 expr: '0' •

    $default  reduce using rule 2 (expr)


State 2

    3 expr: '1' •

    $default  reduce using rule 3 (expr)


State 3

    4 expr: '2' •

    $default  reduce using rule 4 (expr)


State 4

    5 expr: '3' •

    $default  reduce using rule 5 (expr)


State 5

    6 expr: '4' •

    $default  reduce using rule 6 (expr)


State 6

    7 expr: '5' •

    $default  reduce using rule 7 (expr)


State 7

    8 expr: '(' • '>' patt ';' expr ')'
   12     | '(' • expr '&' expr ')'
   14     | '(' • "with" expr branch ')'
   15     | '(' • "recur with" expr branch ')'

    '>'           shift, and go to state 17
    '0'           shift, and go to state 1
    '1'           shift, and go to state 2
    '2'           shift, and go to state 3
    '3'           shift, and go to state 4
    '4'           shift, and go to state 5
    '5'           shift, and go to state 6
    '('           shift, and go to state 7
    "with"        shift, and go to state 18
    "recur with"  shift, and go to state 19
    'a'           shift, and go to state 8
    'b'           shift, and go to state 9
    'c'           shift, and go to state 10
    'd'           shift, and go to state 11
    'e'           shift, and go to state 12
    'x'           shift, and go to state 13
    'y'           shift, and go to state 14

    expr   go to state 20
    ident  go to state 16


State 8

   29 ident: 'a' •

    $default  reduce using rule 29 (ident)


State 9

   30 ident: 'b' •

    $default  reduce using rule 30 (ident)


State 10

   31 ident: 'c' •

    $default  reduce using rule 31 (ident)


State 11

   32 ident: 'd' •

    $default  reduce using rule 32 (ident)


State 12

   33 ident: 'e' •

    $default  reduce using rule 33 (ident)


State 13

   34 ident: 'x' •

    $default  reduce using rule 34 (ident)


State 14

   35 ident: 'y' •

    $default  reduce using rule 35 (ident)


State 15

    0 $accept: expr • $end
    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr

    $end  shift, and go to state 21
    '.'   shift, and go to state 22
    '@'   shift, and go to state 23
    ' '   shift, and go to state 24
    '>'   shift, and go to state 25


State 16

    1 expr: ident •

    $default  reduce using rule 1 (expr)


State 17

    8 expr: '(' '>' • patt ';' expr ')'

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 29


State 18

   14 expr: '(' "with" • expr branch ')'

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 30
    ident  go to state 16


State 19

   15 expr: '(' "recur with" • expr branch ')'

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 31
    ident  go to state 16


State 20

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   12     | '(' expr • '&' expr ')'
   13     | expr • '@' expr

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    '&'  shift, and go to state 32


State 21

    0 $accept: expr $end •

    $default  accept


State 22

   11 expr: expr '.' • expr

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 33
    ident  go to state 16


State 23

   13 expr: expr '@' • expr

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 34
    ident  go to state 16


State 24

   10 expr: expr ' ' • expr

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 35
    ident  go to state 16


State 25

    9 expr: expr '>' • patt ';' expr

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 36


State 26

   25 patt: '(' • patt '%' patt ')'
   26     | '(' • '(' patt ')' '.' patt ')'

    '('  shift, and go to state 37
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 38


State 27

   20 patt: '_' •
   21     | '_' • type

    '*'  shift, and go to state 39
    '#'  shift, and go to state 40

    $default  reduce using rule 20 (patt)

    type  go to state 41


State 28

   22 patt: '`' • ident
   23     | '`' • patt ':' type
   24     | '`' • ident "::" patt

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    patt   go to state 42
    ident  go to state 43


State 29

    8 expr: '(' '>' patt • ';' expr ')'

    ';'  shift, and go to state 44


State 30

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   14     | '(' "with" expr • branch ')'

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    '|'  shift, and go to state 45

    $default  reduce using rule 16 (branch)

    branch  go to state 46


State 31

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   15     | '(' "recur with" expr • branch ')'

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    '|'  shift, and go to state 45

    $default  reduce using rule 16 (branch)

    branch  go to state 47


State 32

   12 expr: '(' expr '&' • expr ')'

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 48
    ident  go to state 16


State 33

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   11     | expr '.' expr •
   13     | expr • '@' expr

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25

    $default  reduce using rule 11 (expr)


State 34

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   13     | expr '@' expr •

    ' '  shift, and go to state 24
    '>'  shift, and go to state 25

    $default  reduce using rule 13 (expr)


State 35

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   10     | expr ' ' expr •
   11     | expr • '.' expr
   13     | expr • '@' expr

    '>'  shift, and go to state 25

    $default  reduce using rule 10 (expr)


State 36

    9 expr: expr '>' patt • ';' expr

    ';'  shift, and go to state 49


State 37

   25 patt: '(' • patt '%' patt ')'
   26     | '(' • '(' patt ')' '.' patt ')'
   26     | '(' '(' • patt ')' '.' patt ')'

    '('  shift, and go to state 37
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 50


State 38

   25 patt: '(' patt • '%' patt ')'

    '%'  shift, and go to state 51


State 39

   27 type: '*' •

    $default  reduce using rule 27 (type)


State 40

   28 type: '#' •

    $default  reduce using rule 28 (type)


State 41

   21 patt: '_' type •

    $default  reduce using rule 21 (patt)


State 42

   23 patt: '`' patt • ':' type

    ':'  shift, and go to state 52


State 43

   22 patt: '`' ident •
   24     | '`' ident • "::" patt

    "::"  shift, and go to state 53

    $default  reduce using rule 22 (patt)


State 44

    8 expr: '(' '>' patt ';' • expr ')'

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 54
    ident  go to state 16


State 45

   17 branch: '|' • '>' patt ';' expr branch
   18       | '|' • '>' patt '&' '(' declaration ')' ';' expr branch
   19       | '|' • expr

    '>'  shift, and go to state 55
    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 56
    ident  go to state 16


State 46

   14 expr: '(' "with" expr branch • ')'

    ')'  shift, and go to state 57


State 47

   15 expr: '(' "recur with" expr branch • ')'

    ')'  shift, and go to state 58


State 48

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   12     | '(' expr '&' expr • ')'
   13     | expr • '@' expr

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    ')'  shift, and go to state 59


State 49

    9 expr: expr '>' patt ';' • expr

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 60
    ident  go to state 16


State 50

   25 patt: '(' patt • '%' patt ')'
   26     | '(' '(' patt • ')' '.' patt ')'

    ')'  shift, and go to state 61
    '%'  shift, and go to state 51


State 51

   25 patt: '(' patt '%' • patt ')'

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 62


State 52

   23 patt: '`' patt ':' • type

    '*'  shift, and go to state 39
    '#'  shift, and go to state 40

    type  go to state 63


State 53

   24 patt: '`' ident "::" • patt

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 64


State 54

    8 expr: '(' '>' patt ';' expr • ')'
    9     | expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    ')'  shift, and go to state 65


State 55

   17 branch: '|' '>' • patt ';' expr branch
   18       | '|' '>' • patt '&' '(' declaration ')' ';' expr branch

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 66


State 56

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   19 branch: '|' expr •

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25

    $default  reduce using rule 19 (branch)


State 57

   14 expr: '(' "with" expr branch ')' •

    $default  reduce using rule 14 (expr)


State 58

   15 expr: '(' "recur with" expr branch ')' •

    $default  reduce using rule 15 (expr)


State 59

   12 expr: '(' expr '&' expr ')' •

    $default  reduce using rule 12 (expr)


State 60

    9 expr: expr • '>' patt ';' expr
    9     | expr '>' patt ';' expr •
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr

    '>'  error (nonassociative)

    $default  reduce using rule 9 (expr)


State 61

   26 patt: '(' '(' patt ')' • '.' patt ')'

    '.'  shift, and go to state 67


State 62

   25 patt: '(' patt '%' patt • ')'

    ')'  shift, and go to state 68


State 63

   23 patt: '`' patt ':' type •

    $default  reduce using rule 23 (patt)


State 64

   24 patt: '`' ident "::" patt •

    $default  reduce using rule 24 (patt)


State 65

    8 expr: '(' '>' patt ';' expr ')' •

    $default  reduce using rule 8 (expr)


State 66

   17 branch: '|' '>' patt • ';' expr branch
   18       | '|' '>' patt • '&' '(' declaration ')' ';' expr branch

    ';'  shift, and go to state 69
    '&'  shift, and go to state 70


State 67

   26 patt: '(' '(' patt ')' '.' • patt ')'

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 71


State 68

   25 patt: '(' patt '%' patt ')' •

    $default  reduce using rule 25 (patt)


State 69

   17 branch: '|' '>' patt ';' • expr branch

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 72
    ident  go to state 16


State 70

   18 branch: '|' '>' patt '&' • '(' declaration ')' ';' expr branch

    '('  shift, and go to state 73


State 71

   26 patt: '(' '(' patt ')' '.' patt • ')'

    ')'  shift, and go to state 74


State 72

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   17 branch: '|' '>' patt ';' expr • branch

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    '|'  shift, and go to state 45

    $default  reduce using rule 16 (branch)

    branch  go to state 75


State 73

   18 branch: '|' '>' patt '&' '(' • declaration ')' ';' expr branch

    '0'      shift, and go to state 1
    '1'      shift, and go to state 2
    '2'      shift, and go to state 3
    '3'      shift, and go to state 4
    '4'      shift, and go to state 5
    '5'      shift, and go to state 6
    '('      shift, and go to state 76
    '_'      shift, and go to state 27
    '`'      shift, and go to state 28
    'a'      shift, and go to state 8
    'b'      shift, and go to state 9
    'c'      shift, and go to state 10
    'd'      shift, and go to state 11
    'e'      shift, and go to state 12
    'x'      shift, and go to state 13
    'y'      shift, and go to state 14
    "recur"  shift, and go to state 77

    $default  reduce using rule 36 (declaration)

    expr         go to state 78
    patt         go to state 79
    ident        go to state 16
    declaration  go to state 80


State 74

   26 patt: '(' '(' patt ')' '.' patt ')' •

    $default  reduce using rule 26 (patt)


State 75

   17 branch: '|' '>' patt ';' expr branch •

    $default  reduce using rule 17 (branch)


State 76

    8 expr: '(' • '>' patt ';' expr ')'
   12     | '(' • expr '&' expr ')'
   14     | '(' • "with" expr branch ')'
   15     | '(' • "recur with" expr branch ')'
   25 patt: '(' • patt '%' patt ')'
   26     | '(' • '(' patt ')' '.' patt ')'

    '>'           shift, and go to state 17
    '0'           shift, and go to state 1
    '1'           shift, and go to state 2
    '2'           shift, and go to state 3
    '3'           shift, and go to state 4
    '4'           shift, and go to state 5
    '5'           shift, and go to state 6
    '('           shift, and go to state 81
    "with"        shift, and go to state 18
    "recur with"  shift, and go to state 19
    '_'           shift, and go to state 27
    '`'           shift, and go to state 28
    'a'           shift, and go to state 8
    'b'           shift, and go to state 9
    'c'           shift, and go to state 10
    'd'           shift, and go to state 11
    'e'           shift, and go to state 12
    'x'           shift, and go to state 13
    'y'           shift, and go to state 14

    expr   go to state 20
    patt   go to state 38
    ident  go to state 16


State 77

   37 declaration: "recur" • patt "<>" expr declaration

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 82


State 78

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   39 declaration: expr • ">" patt declaration

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    ">"  shift, and go to state 83


State 79

   38 declaration: patt • "<" expr declaration

    "<"  shift, and go to state 84


State 80

   18 branch: '|' '>' patt '&' '(' declaration • ')' ';' expr branch

    ')'  shift, and go to state 85


State 81

    8 expr: '(' • '>' patt ';' expr ')'
   12     | '(' • expr '&' expr ')'
   14     | '(' • "with" expr branch ')'
   15     | '(' • "recur with" expr branch ')'
   25 patt: '(' • patt '%' patt ')'
   26     | '(' • '(' patt ')' '.' patt ')'
   26     | '(' '(' • patt ')' '.' patt ')'

    '>'           shift, and go to state 17
    '0'           shift, and go to state 1
    '1'           shift, and go to state 2
    '2'           shift, and go to state 3
    '3'           shift, and go to state 4
    '4'           shift, and go to state 5
    '5'           shift, and go to state 6
    '('           shift, and go to state 81
    "with"        shift, and go to state 18
    "recur with"  shift, and go to state 19
    '_'           shift, and go to state 27
    '`'           shift, and go to state 28
    'a'           shift, and go to state 8
    'b'           shift, and go to state 9
    'c'           shift, and go to state 10
    'd'           shift, and go to state 11
    'e'           shift, and go to state 12
    'x'           shift, and go to state 13
    'y'           shift, and go to state 14

    expr   go to state 20
    patt   go to state 50
    ident  go to state 16


State 82

   37 declaration: "recur" patt • "<>" expr declaration

    "<>"  shift, and go to state 86


State 83

   39 declaration: expr ">" • patt declaration

    '('  shift, and go to state 26
    '_'  shift, and go to state 27
    '`'  shift, and go to state 28

    patt  go to state 87


State 84

   38 declaration: patt "<" • expr declaration

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 88
    ident  go to state 16


State 85

   18 branch: '|' '>' patt '&' '(' declaration ')' • ';' expr branch

    ';'  shift, and go to state 89


State 86

   37 declaration: "recur" patt "<>" • expr declaration

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 90
    ident  go to state 16


State 87

   39 declaration: expr ">" patt • declaration

    '0'      shift, and go to state 1
    '1'      shift, and go to state 2
    '2'      shift, and go to state 3
    '3'      shift, and go to state 4
    '4'      shift, and go to state 5
    '5'      shift, and go to state 6
    '('      shift, and go to state 76
    '_'      shift, and go to state 27
    '`'      shift, and go to state 28
    'a'      shift, and go to state 8
    'b'      shift, and go to state 9
    'c'      shift, and go to state 10
    'd'      shift, and go to state 11
    'e'      shift, and go to state 12
    'x'      shift, and go to state 13
    'y'      shift, and go to state 14
    "recur"  shift, and go to state 77

    $default  reduce using rule 36 (declaration)

    expr         go to state 78
    patt         go to state 79
    ident        go to state 16
    declaration  go to state 91


State 88

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   38 declaration: patt "<" expr • declaration

    '.'      shift, and go to state 22
    '@'      shift, and go to state 23
    ' '      shift, and go to state 24
    '>'      shift, and go to state 25
    '0'      shift, and go to state 1
    '1'      shift, and go to state 2
    '2'      shift, and go to state 3
    '3'      shift, and go to state 4
    '4'      shift, and go to state 5
    '5'      shift, and go to state 6
    '('      shift, and go to state 76
    '_'      shift, and go to state 27
    '`'      shift, and go to state 28
    'a'      shift, and go to state 8
    'b'      shift, and go to state 9
    'c'      shift, and go to state 10
    'd'      shift, and go to state 11
    'e'      shift, and go to state 12
    'x'      shift, and go to state 13
    'y'      shift, and go to state 14
    "recur"  shift, and go to state 77

    $default  reduce using rule 36 (declaration)

    expr         go to state 78
    patt         go to state 79
    ident        go to state 16
    declaration  go to state 92


State 89

   18 branch: '|' '>' patt '&' '(' declaration ')' ';' • expr branch

    '0'  shift, and go to state 1
    '1'  shift, and go to state 2
    '2'  shift, and go to state 3
    '3'  shift, and go to state 4
    '4'  shift, and go to state 5
    '5'  shift, and go to state 6
    '('  shift, and go to state 7
    'a'  shift, and go to state 8
    'b'  shift, and go to state 9
    'c'  shift, and go to state 10
    'd'  shift, and go to state 11
    'e'  shift, and go to state 12
    'x'  shift, and go to state 13
    'y'  shift, and go to state 14

    expr   go to state 93
    ident  go to state 16


State 90

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   37 declaration: "recur" patt "<>" expr • declaration

    '.'      shift, and go to state 22
    '@'      shift, and go to state 23
    ' '      shift, and go to state 24
    '>'      shift, and go to state 25
    '0'      shift, and go to state 1
    '1'      shift, and go to state 2
    '2'      shift, and go to state 3
    '3'      shift, and go to state 4
    '4'      shift, and go to state 5
    '5'      shift, and go to state 6
    '('      shift, and go to state 76
    '_'      shift, and go to state 27
    '`'      shift, and go to state 28
    'a'      shift, and go to state 8
    'b'      shift, and go to state 9
    'c'      shift, and go to state 10
    'd'      shift, and go to state 11
    'e'      shift, and go to state 12
    'x'      shift, and go to state 13
    'y'      shift, and go to state 14
    "recur"  shift, and go to state 77

    $default  reduce using rule 36 (declaration)

    expr         go to state 78
    patt         go to state 79
    ident        go to state 16
    declaration  go to state 94


State 91

   39 declaration: expr ">" patt declaration •

    $default  reduce using rule 39 (declaration)


State 92

   38 declaration: patt "<" expr declaration •

    $default  reduce using rule 38 (declaration)


State 93

    9 expr: expr • '>' patt ';' expr
   10     | expr • ' ' expr
   11     | expr • '.' expr
   13     | expr • '@' expr
   18 branch: '|' '>' patt '&' '(' declaration ')' ';' expr • branch

    '.'  shift, and go to state 22
    '@'  shift, and go to state 23
    ' '  shift, and go to state 24
    '>'  shift, and go to state 25
    '|'  shift, and go to state 45

    $default  reduce using rule 16 (branch)

    branch  go to state 95


State 94

   37 declaration: "recur" patt "<>" expr declaration •

    $default  reduce using rule 37 (declaration)


State 95

   18 branch: '|' '>' patt '&' '(' declaration ')' ';' expr branch •

    $default  reduce using rule 18 (branch)

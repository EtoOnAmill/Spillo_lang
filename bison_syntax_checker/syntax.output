Grammar

    0 $accept: module $end

    1 module: "def" patt
    2       | declarators patt '=' sort module
    3       | "def" patt module

    4 set: ε
    5    | declarators patt '=' sort set

    6 declarators: "let"
    7            | "rec"
    8            | "tot"

    9 number: NUM
   10       | NUM '.' NUM

   11 literal: number
   12        | 'U' number
   13        | "set"
   14        | "module"

   15 sort: ident
   16     | '{' set '}'
   17     | '{' module '}'
   18     | literal
   19     | '(' sort ')'
   20     | sort implicit
   21     | sort sort '^'
   22     | '(' multisort "^)"
   23     | '(' fnBranch ')'
   24     | sort sort '%'
   25     | '(' multisort "%)"
   26     | sort sort '/'
   27     | sort sort "/?"
   28     | '(' multisort "/)"
   29     | sort sort '!'
   30     | '(' multisort "!)"
   31     | sort '@' '(' patt ')' sort '%'
   32     | sort '@' '(' patt ')' " , " sort '%'
   33     | sort sort "%?"
   34     | sort '@' '(' patt ')' sort '^'
   35     | sort '@' '(' patt ')' " . " sort '^'
   36     | sort sort "^?"
   37     | sort "::" '(' patt ')'
   38     | sort "::" '{' set '}'
   39     | "set::" '{' multipatt '}'
   40     | sort '@' ident

   41 fnBranch: '>' patt guard ';' sort
   42         | ">>" patt guard ';' sort fnBranch
   43         | '>' patt guard ';' sort fnBranch

   44 guard: ε
   45      | '&' patt '=' sort guard
   46      | '|' patt guard

   47 ident: WORD

   48 patt: '_'
   49     | ident
   50     | '(' patt ')'
   51     | literal
   52     | '~' ident
   53     | '~' '(' sort ')'
   54     | patt implicit_dec
   55     | '(' patt ':' sort ')'
   56     | patt "::" patt
   57     | '{' set '}'
   58     | patt ' ' patt '!'
   59     | '(' multipatt "!)"
   60     | patt ' ' patt '/'
   61     | '(' multipatt "/)"

   62 multisort: sort sort
   63          | sort multisort

   64 implicit: '[' multisort ']'
   65         | '[' sort ']'

   66 multipatt: patt patt
   67          | patt multipatt

   68 implicit_dec: '[' multipatt ']'
   69             | '[' patt ']'


Terminals, with rules where they appear

    $end (0) 0
    ' ' (32) 58 60
    '!' (33) 29 58
    '%' (37) 24 31 32
    '&' (38) 45
    '(' (40) 19 22 23 25 28 30 31 32 34 35 37 50 53 55 59 61
    ')' (41) 19 23 31 32 34 35 37 50 53 55
    '.' (46) 10
    '/' (47) 26 60
    ':' (58) 55
    ';' (59) 41 42 43
    '=' (61) 2 5 45
    '>' (62) 41 43
    '@' (64) 31 32 34 35 40
    'U' (85) 12
    '[' (91) 64 65 68 69
    ']' (93) 64 65 68 69
    '^' (94) 21 34 35
    '_' (95) 48
    '{' (123) 16 17 38 39 57
    '|' (124) 46
    '}' (125) 16 17 38 39 57
    '~' (126) 52 53
    error (256)
    NUM (258) 9 10
    WORD (259) 47
    "::" (260) 37 38 56
    "def" (261) 1 3
    "let" (262) 6
    "rec" (263) 7
    "tot" (264) 8
    "set" (265) 13
    "module" (266) 14
    "^)" (267) 22
    "%)" (268) 25
    "/?" (269) 27
    "/)" (270) 28 61
    "!)" (271) 30 59
    " , " (272) 32
    "%?" (273) 33
    " . " (274) 35
    "^?" (275) 36
    "set::" (276) 39
    ">>" (277) 42


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    module (46)
        on left: 1 2 3
        on right: 0 2 3 17
    set (47)
        on left: 4 5
        on right: 5 16 38 57
    declarators (48)
        on left: 6 7 8
        on right: 2 5
    number (49)
        on left: 9 10
        on right: 11 12
    literal (50)
        on left: 11 12 13 14
        on right: 18 51
    sort (51)
        on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 2 5 19 20 21 24 26 27 29 31 32 33 34 35 36 37 38 40 41 42 43 45 53 55 62 63 65
    fnBranch (52)
        on left: 41 42 43
        on right: 23 42 43
    guard (53)
        on left: 44 45 46
        on right: 41 42 43 45 46
    ident (54)
        on left: 47
        on right: 15 40 49 52
    patt (55)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 1 2 3 5 31 32 34 35 37 41 42 43 45 46 50 54 55 56 58 60 66 67 69
    multisort (56)
        on left: 62 63
        on right: 22 25 28 30 63 64
    implicit (57)
        on left: 64 65
        on right: 20
    multipatt (58)
        on left: 66 67
        on right: 39 59 61 67 68
    implicit_dec (59)
        on left: 68 69
        on right: 54


State 0

    0 $accept: • module $end

    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    module       go to state 5
    declarators  go to state 6


State 1

    1 module: "def" • patt
    3       | "def" • patt module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 19


State 2

    6 declarators: "let" •

    $default  reduce using rule 6 (declarators)


State 3

    7 declarators: "rec" •

    $default  reduce using rule 7 (declarators)


State 4

    8 declarators: "tot" •

    $default  reduce using rule 8 (declarators)


State 5

    0 $accept: module • $end

    $end  shift, and go to state 20


State 6

    2 module: declarators • patt '=' sort module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 21


State 7

    9 number: NUM •
   10       | NUM • '.' NUM

    '.'  shift, and go to state 22

    $default  reduce using rule 9 (number)


State 8

   47 ident: WORD •

    $default  reduce using rule 47 (ident)


State 9

   48 patt: '_' •

    $default  reduce using rule 48 (patt)


State 10

   12 literal: 'U' • number

    NUM  shift, and go to state 7

    number  go to state 23


State 11

   13 literal: "set" •

    $default  reduce using rule 13 (literal)


State 12

   14 literal: "module" •

    $default  reduce using rule 14 (literal)


State 13

   57 patt: '{' • set '}'

    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    set          go to state 24
    declarators  go to state 25


State 14

   50 patt: '(' • patt ')'
   55     | '(' • patt ':' sort ')'
   59     | '(' • multipatt "!)"
   61     | '(' • multipatt "/)"

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number     go to state 16
    literal    go to state 17
    ident      go to state 18
    patt       go to state 26
    multipatt  go to state 27


State 15

   52 patt: '~' • ident
   53     | '~' • '(' sort ')'

    WORD  shift, and go to state 8
    '('   shift, and go to state 28

    ident  go to state 29


State 16

   11 literal: number •

    $default  reduce using rule 11 (literal)


State 17

   51 patt: literal •

    $default  reduce using rule 51 (patt)


State 18

   49 patt: ident •

    $default  reduce using rule 49 (patt)


State 19

    1 module: "def" patt •
    3       | "def" patt • module
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '    shift, and go to state 30
    "::"   shift, and go to state 31
    '['    shift, and go to state 32
    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 1 (module)

    module        go to state 33
    declarators   go to state 6
    implicit_dec  go to state 34


State 20

    0 $accept: module $end •

    $default  accept


State 21

    2 module: declarators patt • '=' sort module
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 35

    implicit_dec  go to state 34


State 22

   10 number: NUM '.' • NUM

    NUM  shift, and go to state 36


State 23

   12 literal: 'U' number •

    $default  reduce using rule 12 (literal)


State 24

   57 patt: '{' set • '}'

    '}'  shift, and go to state 37


State 25

    5 set: declarators • patt '=' sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 38


State 26

   50 patt: '(' patt • ')'
   54     | patt • implicit_dec
   55     | '(' patt • ':' sort ')'
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'
   66 multipatt: patt • patt
   67          | patt • multipatt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    ' '       shift, and go to state 30
    "::"      shift, and go to state 31
    ':'       shift, and go to state 39
    '['       shift, and go to state 32
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    ')'       shift, and go to state 40
    '~'       shift, and go to state 15

    number        go to state 16
    literal       go to state 17
    ident         go to state 18
    patt          go to state 41
    multipatt     go to state 42
    implicit_dec  go to state 34


State 27

   59 patt: '(' multipatt • "!)"
   61     | '(' multipatt • "/)"

    "/)"  shift, and go to state 43
    "!)"  shift, and go to state 44


State 28

   53 patt: '~' '(' • sort ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 49
    ident    go to state 50


State 29

   52 patt: '~' ident •

    $default  reduce using rule 52 (patt)


State 30

   58 patt: patt ' ' • patt '!'
   60     | patt ' ' • patt '/'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 51


State 31

   56 patt: patt "::" • patt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 52


State 32

   68 implicit_dec: '[' • multipatt ']'
   69             | '[' • patt ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number     go to state 16
    literal    go to state 17
    ident      go to state 18
    patt       go to state 53
    multipatt  go to state 54


State 33

    3 module: "def" patt module •

    $default  reduce using rule 3 (module)


State 34

   54 patt: patt implicit_dec •

    $default  reduce using rule 54 (patt)


State 35

    2 module: declarators patt '=' • sort module

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 55
    ident    go to state 50


State 36

   10 number: NUM '.' NUM •

    $default  reduce using rule 10 (number)


State 37

   57 patt: '{' set '}' •

    $default  reduce using rule 57 (patt)


State 38

    5 set: declarators patt • '=' sort set
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 56

    implicit_dec  go to state 34


State 39

   55 patt: '(' patt ':' • sort ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 57
    ident    go to state 50


State 40

   50 patt: '(' patt ')' •

    $default  reduce using rule 50 (patt)


State 41

   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'
   66 multipatt: patt • patt
   66          | patt patt •
   67          | patt • multipatt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    ' '       shift, and go to state 30
    "::"      shift, and go to state 31
    '['       shift, and go to state 32
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    $default  reduce using rule 66 (multipatt)

    number        go to state 16
    literal       go to state 17
    ident         go to state 18
    patt          go to state 41
    multipatt     go to state 42
    implicit_dec  go to state 34


State 42

   67 multipatt: patt multipatt •

    $default  reduce using rule 67 (multipatt)


State 43

   61 patt: '(' multipatt "/)" •

    $default  reduce using rule 61 (patt)


State 44

   59 patt: '(' multipatt "!)" •

    $default  reduce using rule 59 (patt)


State 45

   16 sort: '{' • set '}'
   17     | '{' • module '}'

    "def"  shift, and go to state 1
    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    module       go to state 58
    set          go to state 59
    declarators  go to state 60


State 46

   19 sort: '(' • sort ')'
   22     | '(' • multisort "^)"
   23     | '(' • fnBranch ')'
   25     | '(' • multisort "%)"
   28     | '(' • multisort "/)"
   30     | '(' • multisort "!)"

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47
    '>'       shift, and go to state 61
    ">>"      shift, and go to state 62

    number     go to state 16
    literal    go to state 48
    sort       go to state 63
    fnBranch   go to state 64
    ident      go to state 50
    multisort  go to state 65


State 47

   39 sort: "set::" • '{' multipatt '}'

    '{'  shift, and go to state 66


State 48

   18 sort: literal •

    $default  reduce using rule 18 (sort)


State 49

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   53 patt: '~' '(' sort • ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    ')'       shift, and go to state 70
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 50

   15 sort: ident •

    $default  reduce using rule 15 (sort)


State 51

   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   58     | patt ' ' patt • '!'
   60     | patt • ' ' patt '/'
   60     | patt ' ' patt • '/'

    ' '   shift, and go to state 30
    '/'   shift, and go to state 73
    '!'   shift, and go to state 74
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    implicit_dec  go to state 34


State 52

   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   56     | patt "::" patt •
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 56 (patt)

    implicit_dec  go to state 34


State 53

   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'
   66 multipatt: patt • patt
   67          | patt • multipatt
   69 implicit_dec: '[' patt • ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    ' '       shift, and go to state 30
    "::"      shift, and go to state 31
    '['       shift, and go to state 32
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15
    ']'       shift, and go to state 75

    number        go to state 16
    literal       go to state 17
    ident         go to state 18
    patt          go to state 41
    multipatt     go to state 42
    implicit_dec  go to state 34


State 54

   68 implicit_dec: '[' multipatt • ']'

    ']'  shift, and go to state 76


State 55

    2 module: declarators patt '=' sort • module
   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    "def"     shift, and go to state 1
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    module       go to state 77
    declarators  go to state 6
    number       go to state 16
    literal      go to state 48
    sort         go to state 71
    ident        go to state 50
    implicit     go to state 72


State 56

    5 set: declarators patt '=' • sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 78
    ident    go to state 50


State 57

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   55 patt: '(' patt ':' sort • ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    ')'       shift, and go to state 79
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 58

   17 sort: '{' module • '}'

    '}'  shift, and go to state 80


State 59

   16 sort: '{' set • '}'

    '}'  shift, and go to state 81


State 60

    2 module: declarators • patt '=' sort module
    5 set: declarators • patt '=' sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 82


State 61

   41 fnBranch: '>' • patt guard ';' sort
   43         | '>' • patt guard ';' sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 83


State 62

   42 fnBranch: ">>" • patt guard ';' sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 84


State 63

   19 sort: '(' sort • ')'
   20     | sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   62 multisort: sort • sort
   63          | sort • multisort

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    ')'       shift, and go to state 85
    "set::"   shift, and go to state 47

    number     go to state 16
    literal    go to state 48
    sort       go to state 86
    ident      go to state 50
    multisort  go to state 87
    implicit   go to state 72


State 64

   23 sort: '(' fnBranch • ')'

    ')'  shift, and go to state 88


State 65

   22 sort: '(' multisort • "^)"
   25     | '(' multisort • "%)"
   28     | '(' multisort • "/)"
   30     | '(' multisort • "!)"

    "^)"  shift, and go to state 89
    "%)"  shift, and go to state 90
    "/)"  shift, and go to state 91
    "!)"  shift, and go to state 92


State 66

   39 sort: "set::" '{' • multipatt '}'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number     go to state 16
    literal    go to state 17
    ident      go to state 18
    patt       go to state 93
    multipatt  go to state 94


State 67

   31 sort: sort '@' • '(' patt ')' sort '%'
   32     | sort '@' • '(' patt ')' " , " sort '%'
   34     | sort '@' • '(' patt ')' sort '^'
   35     | sort '@' • '(' patt ')' " . " sort '^'
   40     | sort '@' • ident

    WORD  shift, and go to state 8
    '('   shift, and go to state 95

    ident  go to state 96


State 68

   37 sort: sort "::" • '(' patt ')'
   38     | sort "::" • '{' set '}'

    '{'  shift, and go to state 97
    '('  shift, and go to state 98


State 69

   64 implicit: '[' • multisort ']'
   65         | '[' • sort ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number     go to state 16
    literal    go to state 48
    sort       go to state 99
    ident      go to state 50
    multisort  go to state 100


State 70

   53 patt: '~' '(' sort ')' •

    $default  reduce using rule 53 (patt)


State 71

   20 sort: sort • implicit
   21     | sort • sort '^'
   21     | sort sort • '^'
   24     | sort • sort '%'
   24     | sort sort • '%'
   26     | sort • sort '/'
   26     | sort sort • '/'
   27     | sort • sort "/?"
   27     | sort sort • "/?"
   29     | sort • sort '!'
   29     | sort sort • '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   33     | sort sort • "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   36     | sort sort • "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '/'       shift, and go to state 101
    '%'       shift, and go to state 102
    '!'       shift, and go to state 103
    '^'       shift, and go to state 104
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "/?"      shift, and go to state 105
    "%?"      shift, and go to state 106
    "^?"      shift, and go to state 107
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 72

   20 sort: sort implicit •

    $default  reduce using rule 20 (sort)


State 73

   60 patt: patt ' ' patt '/' •

    $default  reduce using rule 60 (patt)


State 74

   58 patt: patt ' ' patt '!' •

    $default  reduce using rule 58 (patt)


State 75

   69 implicit_dec: '[' patt ']' •

    $default  reduce using rule 69 (implicit_dec)


State 76

   68 implicit_dec: '[' multipatt ']' •

    $default  reduce using rule 68 (implicit_dec)


State 77

    2 module: declarators patt '=' sort module •

    $default  reduce using rule 2 (module)


State 78

    5 set: declarators patt '=' sort • set
   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    $default  reduce using rule 4 (set)

    set          go to state 108
    declarators  go to state 25
    number       go to state 16
    literal      go to state 48
    sort         go to state 71
    ident        go to state 50
    implicit     go to state 72


State 79

   55 patt: '(' patt ':' sort ')' •

    $default  reduce using rule 55 (patt)


State 80

   17 sort: '{' module '}' •

    $default  reduce using rule 17 (sort)


State 81

   16 sort: '{' set '}' •

    $default  reduce using rule 16 (sort)


State 82

    2 module: declarators patt • '=' sort module
    5 set: declarators patt • '=' sort set
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 109

    implicit_dec  go to state 34


State 83

   41 fnBranch: '>' patt • guard ';' sort
   43         | '>' patt • guard ';' sort fnBranch
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    '|'   shift, and go to state 110
    '&'   shift, and go to state 111
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 44 (guard)

    guard         go to state 112
    implicit_dec  go to state 34


State 84

   42 fnBranch: ">>" patt • guard ';' sort fnBranch
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    '|'   shift, and go to state 110
    '&'   shift, and go to state 111
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 44 (guard)

    guard         go to state 113
    implicit_dec  go to state 34


State 85

   19 sort: '(' sort ')' •

    $default  reduce using rule 19 (sort)


State 86

   20 sort: sort • implicit
   21     | sort • sort '^'
   21     | sort sort • '^'
   24     | sort • sort '%'
   24     | sort sort • '%'
   26     | sort • sort '/'
   26     | sort sort • '/'
   27     | sort • sort "/?"
   27     | sort sort • "/?"
   29     | sort • sort '!'
   29     | sort sort • '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   33     | sort sort • "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   36     | sort sort • "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   62 multisort: sort • sort
   62          | sort sort •
   63          | sort • multisort

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '/'       shift, and go to state 101
    '%'       shift, and go to state 102
    '!'       shift, and go to state 103
    '^'       shift, and go to state 104
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "/?"      shift, and go to state 105
    "%?"      shift, and go to state 106
    "^?"      shift, and go to state 107
    "set::"   shift, and go to state 47

    $default  reduce using rule 62 (multisort)

    number     go to state 16
    literal    go to state 48
    sort       go to state 86
    ident      go to state 50
    multisort  go to state 87
    implicit   go to state 72


State 87

   63 multisort: sort multisort •

    $default  reduce using rule 63 (multisort)


State 88

   23 sort: '(' fnBranch ')' •

    $default  reduce using rule 23 (sort)


State 89

   22 sort: '(' multisort "^)" •

    $default  reduce using rule 22 (sort)


State 90

   25 sort: '(' multisort "%)" •

    $default  reduce using rule 25 (sort)


State 91

   28 sort: '(' multisort "/)" •

    $default  reduce using rule 28 (sort)


State 92

   30 sort: '(' multisort "!)" •

    $default  reduce using rule 30 (sort)


State 93

   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'
   66 multipatt: patt • patt
   67          | patt • multipatt

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    ' '       shift, and go to state 30
    "::"      shift, and go to state 31
    '['       shift, and go to state 32
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number        go to state 16
    literal       go to state 17
    ident         go to state 18
    patt          go to state 41
    multipatt     go to state 42
    implicit_dec  go to state 34


State 94

   39 sort: "set::" '{' multipatt • '}'

    '}'  shift, and go to state 114


State 95

   31 sort: sort '@' '(' • patt ')' sort '%'
   32     | sort '@' '(' • patt ')' " , " sort '%'
   34     | sort '@' '(' • patt ')' sort '^'
   35     | sort '@' '(' • patt ')' " . " sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 115


State 96

   40 sort: sort '@' ident •

    $default  reduce using rule 40 (sort)


State 97

   38 sort: sort "::" '{' • set '}'

    "let"  shift, and go to state 2
    "rec"  shift, and go to state 3
    "tot"  shift, and go to state 4

    $default  reduce using rule 4 (set)

    set          go to state 116
    declarators  go to state 25


State 98

   37 sort: sort "::" '(' • patt ')'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 117


State 99

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   62 multisort: sort • sort
   63          | sort • multisort
   65 implicit: '[' sort • ']'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47
    ']'       shift, and go to state 118

    number     go to state 16
    literal    go to state 48
    sort       go to state 86
    ident      go to state 50
    multisort  go to state 87
    implicit   go to state 72


State 100

   64 implicit: '[' multisort • ']'

    ']'  shift, and go to state 119


State 101

   26 sort: sort sort '/' •

    $default  reduce using rule 26 (sort)


State 102

   24 sort: sort sort '%' •

    $default  reduce using rule 24 (sort)


State 103

   29 sort: sort sort '!' •

    $default  reduce using rule 29 (sort)


State 104

   21 sort: sort sort '^' •

    $default  reduce using rule 21 (sort)


State 105

   27 sort: sort sort "/?" •

    $default  reduce using rule 27 (sort)


State 106

   33 sort: sort sort "%?" •

    $default  reduce using rule 33 (sort)


State 107

   36 sort: sort sort "^?" •

    $default  reduce using rule 36 (sort)


State 108

    5 set: declarators patt '=' sort set •

    $default  reduce using rule 5 (set)


State 109

    2 module: declarators patt '=' • sort module
    5 set: declarators patt '=' • sort set

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 120
    ident    go to state 50


State 110

   46 guard: '|' • patt guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 121


State 111

   45 guard: '&' • patt '=' sort guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '_'       shift, and go to state 9
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 13
    '('       shift, and go to state 14
    '~'       shift, and go to state 15

    number   go to state 16
    literal  go to state 17
    ident    go to state 18
    patt     go to state 122


State 112

   41 fnBranch: '>' patt guard • ';' sort
   43         | '>' patt guard • ';' sort fnBranch

    ';'  shift, and go to state 123


State 113

   42 fnBranch: ">>" patt guard • ';' sort fnBranch

    ';'  shift, and go to state 124


State 114

   39 sort: "set::" '{' multipatt '}' •

    $default  reduce using rule 39 (sort)


State 115

   31 sort: sort '@' '(' patt • ')' sort '%'
   32     | sort '@' '(' patt • ')' " , " sort '%'
   34     | sort '@' '(' patt • ')' sort '^'
   35     | sort '@' '(' patt • ')' " . " sort '^'
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    ')'   shift, and go to state 125

    implicit_dec  go to state 34


State 116

   38 sort: sort "::" '{' set • '}'

    '}'  shift, and go to state 126


State 117

   37 sort: sort "::" '(' patt • ')'
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    ')'   shift, and go to state 127

    implicit_dec  go to state 34


State 118

   65 implicit: '[' sort ']' •

    $default  reduce using rule 65 (implicit)


State 119

   64 implicit: '[' multisort ']' •

    $default  reduce using rule 64 (implicit)


State 120

    2 module: declarators patt '=' sort • module
    5 set: declarators patt '=' sort • set
   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    "def"     shift, and go to state 1
    "let"     shift, and go to state 2
    "rec"     shift, and go to state 3
    "tot"     shift, and go to state 4
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    $default  reduce using rule 4 (set)

    module       go to state 77
    set          go to state 108
    declarators  go to state 60
    number       go to state 16
    literal      go to state 48
    sort         go to state 71
    ident        go to state 50
    implicit     go to state 72


State 121

   46 guard: '|' patt • guard
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    '|'   shift, and go to state 110
    '&'   shift, and go to state 111
    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32

    $default  reduce using rule 44 (guard)

    guard         go to state 128
    implicit_dec  go to state 34


State 122

   45 guard: '&' patt • '=' sort guard
   54 patt: patt • implicit_dec
   56     | patt • "::" patt
   58     | patt • ' ' patt '!'
   60     | patt • ' ' patt '/'

    ' '   shift, and go to state 30
    "::"  shift, and go to state 31
    '['   shift, and go to state 32
    '='   shift, and go to state 129

    implicit_dec  go to state 34


State 123

   41 fnBranch: '>' patt guard ';' • sort
   43         | '>' patt guard ';' • sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 130
    ident    go to state 50


State 124

   42 fnBranch: ">>" patt guard ';' • sort fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 131
    ident    go to state 50


State 125

   31 sort: sort '@' '(' patt ')' • sort '%'
   32     | sort '@' '(' patt ')' • " , " sort '%'
   34     | sort '@' '(' patt ')' • sort '^'
   35     | sort '@' '(' patt ')' • " . " sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    " , "     shift, and go to state 132
    " . "     shift, and go to state 133
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 134
    ident    go to state 50


State 126

   38 sort: sort "::" '{' set '}' •

    $default  reduce using rule 38 (sort)


State 127

   37 sort: sort "::" '(' patt ')' •

    $default  reduce using rule 37 (sort)


State 128

   46 guard: '|' patt guard •

    $default  reduce using rule 46 (guard)


State 129

   45 guard: '&' patt '=' • sort guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 135
    ident    go to state 50


State 130

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   41 fnBranch: '>' patt guard ';' sort •
   43         | '>' patt guard ';' sort • fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47
    '>'       shift, and go to state 61
    ">>"      shift, and go to state 62

    $default  reduce using rule 41 (fnBranch)

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    fnBranch  go to state 136
    ident     go to state 50
    implicit  go to state 72


State 131

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   42 fnBranch: ">>" patt guard ';' sort • fnBranch

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47
    '>'       shift, and go to state 61
    ">>"      shift, and go to state 62

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    fnBranch  go to state 137
    ident     go to state 50
    implicit  go to state 72


State 132

   32 sort: sort '@' '(' patt ')' " , " • sort '%'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 138
    ident    go to state 50


State 133

   35 sort: sort '@' '(' patt ')' " . " • sort '^'

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number   go to state 16
    literal  go to state 48
    sort     go to state 139
    ident    go to state 50


State 134

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   31     | sort '@' '(' patt ')' sort • '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   34     | sort '@' '(' patt ')' sort • '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '%'       shift, and go to state 140
    '^'       shift, and go to state 141
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 135

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident
   45 guard: '&' patt '=' sort • guard

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '|'       shift, and go to state 110
    '&'       shift, and go to state 111
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    $default  reduce using rule 44 (guard)

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    guard     go to state 142
    ident     go to state 50
    implicit  go to state 72


State 136

   43 fnBranch: '>' patt guard ';' sort fnBranch •

    $default  reduce using rule 43 (fnBranch)


State 137

   42 fnBranch: ">>" patt guard ';' sort fnBranch •

    $default  reduce using rule 42 (fnBranch)


State 138

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   32     | sort '@' '(' patt ')' " , " sort • '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '%'       shift, and go to state 143
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 139

   20 sort: sort • implicit
   21     | sort • sort '^'
   24     | sort • sort '%'
   26     | sort • sort '/'
   27     | sort • sort "/?"
   29     | sort • sort '!'
   31     | sort • '@' '(' patt ')' sort '%'
   32     | sort • '@' '(' patt ')' " , " sort '%'
   33     | sort • sort "%?"
   34     | sort • '@' '(' patt ')' sort '^'
   35     | sort • '@' '(' patt ')' " . " sort '^'
   35     | sort '@' '(' patt ')' " . " sort • '^'
   36     | sort • sort "^?"
   37     | sort • "::" '(' patt ')'
   38     | sort • "::" '{' set '}'
   40     | sort • '@' ident

    NUM       shift, and go to state 7
    WORD      shift, and go to state 8
    '^'       shift, and go to state 144
    '@'       shift, and go to state 67
    "::"      shift, and go to state 68
    '['       shift, and go to state 69
    'U'       shift, and go to state 10
    "set"     shift, and go to state 11
    "module"  shift, and go to state 12
    '{'       shift, and go to state 45
    '('       shift, and go to state 46
    "set::"   shift, and go to state 47

    number    go to state 16
    literal   go to state 48
    sort      go to state 71
    ident     go to state 50
    implicit  go to state 72


State 140

   31 sort: sort '@' '(' patt ')' sort '%' •

    $default  reduce using rule 31 (sort)


State 141

   34 sort: sort '@' '(' patt ')' sort '^' •

    $default  reduce using rule 34 (sort)


State 142

   45 guard: '&' patt '=' sort guard •

    $default  reduce using rule 45 (guard)


State 143

   32 sort: sort '@' '(' patt ')' " , " sort '%' •

    $default  reduce using rule 32 (sort)


State 144

   35 sort: sort '@' '(' patt ')' " . " sort '^' •

    $default  reduce using rule 35 (sort)
